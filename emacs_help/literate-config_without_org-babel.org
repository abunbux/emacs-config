# -*- mode: org; -*-
#+TITLE: literate-config без org-babel
#+DESCRIPTION:
#+KEYWORDS:
#+AUTHOR:
#+email:
#+INFOJS_OPT:
#+STARTUP:  content

#+DATE: CREATED: <Thu Feb 17 12:28:13 EEST 2021>
# Time-stamp: <Последнее обновление -- Thursday July 22 12:31:3 EEST 2021>


По ссылкам ([[https://github.com/srdjanm88/dotemacs][srdjanm88/dotemacs]] и [[https://github.com/wasamasa/dotemacs][wasamasa/dotemacs]]) находятся замечательные образцы настроек ~emacs~ в ~orgmode~. Только делается это не с помощью ~org-babel~, точкой входа является функция, написанная *wasamasa* или, по-крайней мере, подсмотренная у него.

Здесь привожу аналогичную функцию от *srdjanm88*, помещаем её в =init.el=.

#+BEGIN_SRC emacs-lisp :tangle yes

  ;; better error messages and performance than
  ;; org-babel-load-file but not the most stable
  (defvar header-depth 2)
  (defun my/load-literate-config ()
    (let (errors)
      (with-temp-buffer
        (insert-file "~/.emacs.d/init.org")
        (goto-char (point-min))
        (search-forward "\n* init")
        (while (not (eobp))
          (forward-line 1)
          (cond
           ;; skip headers marked as TODO
           ((looking-at "\(\*+\) TODO +.*$")
            (when (ignore-errors (search-forward (format "\n%s " (match-string 1))
                                                 nil t))
              (forward-line -1))) ; avoid (forward-line 1) messing this up
           ;; report headers up to 3* deep
           ((looking-at
             (format "\*\{1,%s\} +.*$"
                     header-depth))
            (message "%s" (match-string 0)))
           ;; evaluate code blocks
           ((looking-at "\s*#\+BEGIN_SRC +emacs-lisp.*$")
            (let (src-beg src-end)
              (condition-case error
                  (progn
                    (setq src-beg (match-end 0))
                    (search-forward "#+END_SRC")
                    (setq src-end (match-beginning 0))
                    (with-timer (eval-region src-beg src-end)))
                (error
                 (push (format "%s for:\n%s\n\n---\n"
                               (error-message-string error)
                               (buffer-substring src-beg src-end))
                       errors)))))
           ;; finish on the next level-1 header
           ((looking-at "^\* ")
            (goto-char (point-max))))))
      (message "pre-init: (%.3fs)" my-init-time)
      (when errors
        (with-current-buffer (get-buffer-create "*init errors*")
          (insert (format "%i error(s) found\n\n" (length errors)))
          (dolist (error (nreverse errors))
            (insert error "\n"))
          (goto-char (point-min))
          (special-mode))
        (setq initial-buffer-choice (lambda () (get-buffer "*init errors*"))))))

  (my/load-literate-config)

  #+END_SRC

В другом файле (=init.org=), пишем конфиг, но в начале в том месте, где начинается подгружаемый код, должен находится заголовок первого уровня (~* init~).
